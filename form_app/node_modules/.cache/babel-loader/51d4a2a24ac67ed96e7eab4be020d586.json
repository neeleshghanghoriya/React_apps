{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT_CHANGE\") {\n    return {\n      value: action.value,\n      isTouched: true\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return prevstate => {\n      [...prevstate, isTouched = true];\n    };\n  }\n\n  if (action.type === \"RESET\") return initialInputState;\n  return {\n    value: '',\n    isTouched: false\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState); //   const [enteredValue, setEnteredValue] = useState('');\n  //   const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: event.target.value\n    });\n  };\n\n  const valueBlurHandler = event => {\n    dispatch({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  }; //   const valueIsValid = validateValue(enteredValue);\n  //   const hasError = !valueIsValid && isTouched;\n  //   const valueChangeHandler = (event) => {\n  //     setEnteredValue(event.target.value);\n  //   };\n  //   const valueBlurHandler = (event) => {\n  //     setIsTouched(true);\n  //   };\n  //   const reset = (event)=>{\n  //     setEnteredValue(\"\");\n  //     setIsTouched(false);\n  //   };\n  //   return {\n  //     value:enteredValue,\n  //     isValid:valueIsValid,\n  //     hasError,\n  //     valueChangeHandler,\n  //     valueBlurHandler,\n  //     reset\n  //   };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"names":["React","useState","useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","prevstate","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","valueBlurHandler","reset","enteredValue","isValid"],"sources":["C:/Users/Neelesh.Ghanghoriya/React_apps/form_app/src/hooks/use-input.js"],"sourcesContent":["import React,{ useState, useReducer} from \"react\";\r\n\r\nconst initialInputState = {value:'',isTouched:false};\r\nconst inputStateReducer = (state,action) => {\r\n    if(action.type===\"INPUT_CHANGE\")\r\n    {\r\n        return {value:action.value,\r\n        isTouched:true\r\n    };\r\n    }\r\n    if(action.type === \"INPUT_BLUR\")\r\n    {\r\n        return (prevstate)=>{[ ...prevstate,isTouched=true]}\r\n    }\r\n    if(action.type === \"RESET\")\r\n    return initialInputState;\r\n    \r\n    return{\r\n        value:'',\r\n        isTouched:false\r\n    };\r\n};\r\nconst useInput = (validateValue) => {\r\n    const [inputState, dispatch] = useReducer(inputStateReducer,initialInputState);\r\n\r\n//   const [enteredValue, setEnteredValue] = useState('');\r\n//   const [isTouched, setIsTouched] = useState(false);\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n  \r\n  const valueChangeHandler = (event) => {\r\n    dispatch({type:\"INPUT_CHANGE\",value:event.target.value})\r\n  };\r\n  \r\n  const valueBlurHandler = (event) => {\r\n    dispatch({type:\"INPUT_BLUR\"})\r\n  };\r\n  \r\n  const reset = ()=>{\r\n    dispatch({type:\"RESET\"})\r\n  };\r\n\r\n  return {\r\n    value:enteredValue,\r\n    isValid:valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    valueBlurHandler,\r\n    reset\r\n  };\r\n//   const valueIsValid = validateValue(enteredValue);\r\n//   const hasError = !valueIsValid && isTouched;\r\n  \r\n//   const valueChangeHandler = (event) => {\r\n//     setEnteredValue(event.target.value);\r\n//   };\r\n  \r\n//   const valueBlurHandler = (event) => {\r\n//     setIsTouched(true);\r\n//   };\r\n  \r\n//   const reset = (event)=>{\r\n//     setEnteredValue(\"\");\r\n//     setIsTouched(false);\r\n//   };\r\n\r\n//   return {\r\n//     value:enteredValue,\r\n//     isValid:valueIsValid,\r\n//     hasError,\r\n//     valueChangeHandler,\r\n//     valueBlurHandler,\r\n//     reset\r\n//   };\r\n};\r\n\r\nexport default useInput;"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAEA,MAAMC,iBAAiB,GAAG;EAACC,KAAK,EAAC,EAAP;EAAUC,SAAS,EAAC;AAApB,CAA1B;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;EACxC,IAAGA,MAAM,CAACC,IAAP,KAAc,cAAjB,EACA;IACI,OAAO;MAACL,KAAK,EAACI,MAAM,CAACJ,KAAd;MACPC,SAAS,EAAC;IADH,CAAP;EAGH;;EACD,IAAGG,MAAM,CAACC,IAAP,KAAgB,YAAnB,EACA;IACI,OAAQC,SAAD,IAAa;MAAC,CAAE,GAAGA,SAAL,EAAeL,SAAS,GAAC,IAAzB;IAA+B,CAApD;EACH;;EACD,IAAGG,MAAM,CAACC,IAAP,KAAgB,OAAnB,EACA,OAAON,iBAAP;EAEA,OAAM;IACFC,KAAK,EAAC,EADJ;IAEFC,SAAS,EAAC;EAFR,CAAN;AAIH,CAlBD;;AAmBA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAChC,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACI,iBAAD,EAAmBH,iBAAnB,CAAzC,CADgC,CAGpC;EACA;;EACE,MAAMY,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACT,KAAZ,CAAlC;EACA,MAAMY,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACR,SAA7C;;EAEA,MAAMY,kBAAkB,GAAIC,KAAD,IAAW;IACpCJ,QAAQ,CAAC;MAACL,IAAI,EAAC,cAAN;MAAqBL,KAAK,EAACc,KAAK,CAACC,MAAN,CAAaf;IAAxC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMgB,gBAAgB,GAAIF,KAAD,IAAW;IAClCJ,QAAQ,CAAC;MAACL,IAAI,EAAC;IAAN,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMY,KAAK,GAAG,MAAI;IAChBP,QAAQ,CAAC;MAACL,IAAI,EAAC;IAAN,CAAD,CAAR;EACD,CAFD;;EAIA,OAAO;IACLL,KAAK,EAACkB,YADD;IAELC,OAAO,EAACR,YAFH;IAGLC,QAHK;IAILC,kBAJK;IAKLG,gBALK;IAMLC;EANK,CAAP,CApBkC,CA4BpC;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACC,CApDD;;GAAMV,Q;;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
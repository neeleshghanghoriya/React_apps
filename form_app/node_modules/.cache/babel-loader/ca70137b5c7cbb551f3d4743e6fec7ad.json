{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neelesh.Ghanghoriya\\\\React_apps\\\\form_app\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  const inputNameIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n\n    if (enteredName.trim() == 0) {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log(enteredName); // const enteredNameValue = nameInputRef.current.value; ----> not Ideal\n    // console.log(enteredNameValue);\n\n    setEnteredNameIsValid(true);\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = !inputNameIsInvalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), inputNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"H18EWs4MCKfuXv30Af67uImfNpI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameIsTouched","setEnteredNameIsTouched","inputNameIsInvalid","nameInputChangeHandler","event","target","value","submitFormHandler","preventDefault","trim","console","log","nameInputClasses"],"sources":["C:/Users/Neelesh.Ghanghoriya/React_apps/form_app/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n  const inputNameIsInvalid = ! enteredNameIsValid && enteredNameIsTouched;\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n    if (enteredName.trim() == 0) {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    console.log(enteredName);\n    // const enteredNameValue = nameInputRef.current.value; ----> not Ideal\n    // console.log(enteredNameValue);\n    setEnteredNameIsValid(true);\n    setEnteredName(\"\");\n  };\n  const nameInputClasses = !inputNameIsInvalid ? 'form-control':'form-control invalid'\n  return (\n    <form onSubmit={submitFormHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameInputChangeHandler}\n        />\n      </div>\n      {inputNameIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGH,MAAM,EAA3B;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,oBAAD,EAAuBC,uBAAvB,IAAkDV,QAAQ,CAAC,KAAD,CAAhE;EAEA,MAAMW,kBAAkB,GAAG,CAAEJ,kBAAF,IAAwBE,oBAAnD;;EACA,MAAMG,sBAAsB,GAAIC,KAAD,IAAW;IACxCP,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAGA,MAAMC,iBAAiB,GAAIH,KAAD,IAAW;IACnCA,KAAK,CAACI,cAAN;IACAP,uBAAuB,CAAC,IAAD,CAAvB;;IACA,IAAIL,WAAW,CAACa,IAAZ,MAAsB,CAA1B,EAA6B;MAC3BV,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDW,OAAO,CAACC,GAAR,CAAYf,WAAZ,EAPmC,CAQnC;IACA;;IACAG,qBAAqB,CAAC,IAAD,CAArB;IACAF,cAAc,CAAC,EAAD,CAAd;EACD,CAZD;;EAaA,MAAMe,gBAAgB,GAAG,CAACV,kBAAD,GAAsB,cAAtB,GAAqC,sBAA9D;EACA,oBACE;IAAM,QAAQ,EAAEK,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,KAAK,EAAEhB,WAHT;QAIE,QAAQ,EAAEO;MAJZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAUGD,kBAAkB,iBAAI;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVzB,eAWE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAzCD;;GAAMT,W;;KAAAA,W;AA2CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}
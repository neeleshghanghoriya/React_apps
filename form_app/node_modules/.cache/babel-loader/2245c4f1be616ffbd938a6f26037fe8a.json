{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neelesh.Ghanghoriya\\\\React_apps\\\\form_app\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputNameIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const inputEmailIsInvalid = !enteredEmailIsValid && enteredEmailIsTouched;\n  let formIsValid = false;\n\n  if (enteredEmailIsValid && enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputClasses = !inputNameIsInvalid ? \"form-control\" : \"form-control invalid\";\n  const emailInputClasses = !inputEmailIsInvalid ? \"form-control\" : \"form-control invalid\";\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailIsTouched(true);\n  };\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameIsTouched(true);\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n    if (!enteredNameIsValid) return;\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameIsTouched(false);\n    setEnteredEmailIsTouched(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), inputNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), inputEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter a valid email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"W3lZFoiKkS0BytYxKsYzLeYn5Vc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameIsTouched","setEnteredNameIsTouched","enteredEmail","setEnteredEmail","enteredEmailIsTouched","setEnteredEmailIsTouched","enteredNameIsValid","trim","inputNameIsInvalid","enteredEmailIsValid","includes","inputEmailIsInvalid","formIsValid","nameInputClasses","emailInputClasses","emailInputChangeHandler","event","target","value","emailInputBlurHandler","nameInputChangeHandler","nameInputBlurHandler","submitFormHandler","preventDefault"],"sources":["C:/Users/Neelesh.Ghanghoriya/React_apps/form_app/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n  const [enteredEmail,setEnteredEmail] = useState('');\n  const [enteredEmailIsTouched,setEnteredEmailIsTouched] = useState(false)\n  \n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputNameIsInvalid = !enteredNameIsValid && enteredNameIsTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const inputEmailIsInvalid = !enteredEmailIsValid && enteredEmailIsTouched;\n  let formIsValid = false;\n\n \n  if ((enteredEmailIsValid) && (enteredNameIsValid)) {\n    formIsValid=true;\n  }\n\n  const nameInputClasses = !inputNameIsInvalid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  const emailInputClasses = !inputEmailIsInvalid ? \"form-control\":\"form-control invalid\";\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  }\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailIsTouched(true);\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameIsTouched(true);\n  };\n  \n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n    if (!enteredNameIsValid) return;\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameIsTouched(false);\n    setEnteredEmailIsTouched(false);\n  };\n\n  return (\n    <form onSubmit={submitFormHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n        />\n      </div>\n      {inputNameIsInvalid && (\n        <p className=\"error-text\">Name must not be empty</p>\n      )}\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={enteredEmail}\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n        />\n      </div>\n      {inputEmailIsInvalid && (\n        <p className=\"error-text\">Enter a valid email</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IAAkDP,QAAQ,CAAC,KAAD,CAAhE;EACA,MAAM,CAACQ,YAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;EACA,MAAM,CAACU,qBAAD,EAAuBC,wBAAvB,IAAmDX,QAAQ,CAAC,KAAD,CAAjE;EAGA,MAAMY,kBAAkB,GAAGR,WAAW,CAACS,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBN,oBAAlD;EACA,MAAMS,mBAAmB,GAAGP,YAAY,CAACQ,QAAb,CAAsB,GAAtB,CAA5B;EACA,MAAMC,mBAAmB,GAAG,CAACF,mBAAD,IAAwBL,qBAApD;EACA,IAAIQ,WAAW,GAAG,KAAlB;;EAGA,IAAKH,mBAAD,IAA0BH,kBAA9B,EAAmD;IACjDM,WAAW,GAAC,IAAZ;EACD;;EAED,MAAMC,gBAAgB,GAAG,CAACL,kBAAD,GACrB,cADqB,GAErB,sBAFJ;EAIA,MAAMM,iBAAiB,GAAG,CAACH,mBAAD,GAAuB,cAAvB,GAAsC,sBAAhE;;EAEA,MAAMI,uBAAuB,GAAIC,KAAD,IAAW;IACzCb,eAAe,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAFD;;EAGA,MAAMC,qBAAqB,GAAIH,KAAD,IAAW;IACvCX,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFD;;EAIA,MAAMe,sBAAsB,GAAIJ,KAAD,IAAW;IACxCjB,cAAc,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAGA,MAAMG,oBAAoB,GAAIL,KAAD,IAAW;IACtCf,uBAAuB,CAAC,IAAD,CAAvB;EACD,CAFD;;EAIA,MAAMqB,iBAAiB,GAAIN,KAAD,IAAW;IACnCA,KAAK,CAACO,cAAN;IACAtB,uBAAuB,CAAC,IAAD,CAAvB;IACA,IAAI,CAACK,kBAAL,EAAyB;IACzBP,cAAc,CAAC,EAAD,CAAd;IACAI,eAAe,CAAC,EAAD,CAAf;IACAF,uBAAuB,CAAC,KAAD,CAAvB;IACAI,wBAAwB,CAAC,KAAD,CAAxB;EACD,CARD;;EAUA,oBACE;IAAM,QAAQ,EAAEiB,iBAAhB;IAAA,wBACE;MAAK,SAAS,EAAET,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,KAAK,EAAEf,WAHT;QAIE,QAAQ,EAAEsB,sBAJZ;QAKE,MAAM,EAAEC;MALV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAWGb,kBAAkB,iBACjB;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ,eAcE;MAAK,SAAS,EAAEM,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,OAFL;QAGE,KAAK,EAAEZ,YAHT;QAIE,QAAQ,EAAEa,uBAJZ;QAKE,MAAM,EAAEI;MALV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,EAwBGR,mBAAmB,iBAClB;MAAG,SAAS,EAAC,YAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ,eA2BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACC,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAlFD;;GAAMhB,W;;KAAAA,W;AAoFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}